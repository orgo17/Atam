.global _start

.section .text

  mov $A, %rax
  cmpl $B, 8(%rax)
  jne bad_exit
  cmpl $C, 16(%rax)
  jne bad_exit

  mov $B, %rax
  cmpl $0, 8(%rax)
  jne bad_exit
  cmpl $D, 16(%rax)
  jne bad_exit
  
  mov $C, %rax
  cmpl $0, 8(%rax)
  jne bad_exit
  cmpl $0, 16(%rax)
  jne bad_exit

  mov $D, %rax
  cmpl $0, 8(%rax)
  jne bad_exit
  cmpl $0, 16(%rax)
  jne bad_exit

  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

.section .data
new_node: .quad 26, 0, 0
root:
 .quad A
A:
 .quad 20
 .quad B
 .quad C
B:
 .quad 10
 .quad 0
 .quad D
C:
 .quad 26
 .quad 0
 .quad 0
D:
 .quad 13
 .quad 0
 .quad 0
